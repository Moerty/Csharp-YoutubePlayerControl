//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YoutubePlayerLib.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("YoutubePlayerLib.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;
        ///	&lt;meta charset=&apos;UTF-8&apos; /&gt;
        ///	&lt;style type=&apos;text/css&apos;&gt;
        ///	body {
        ///		overflow:hidden;
        ///	}
        ///	#player{height:95%; width: 100%;}
        ///	&lt;/style&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///	&lt;div id=&apos;player&apos;&gt;&lt;/div&gt;
        ///		&lt;script type=&apos;text/javascript&apos; src=&apos;http://www.youtube.com/player_api&apos;&gt;&lt;/script&gt;
        ///		&lt;script src=&quot;CefPlayer.js&quot;&gt;&lt;/script&gt;
        ///		&lt;script type=&apos;text/javascript&apos;&gt;
        ///			//holds on to player object
        ///			var player;
        ///
        ///			//create youtubeplayer
        ///			function onYouTubePlayerAPIReady() {
        ///				player = new YT.Player(&apos;player&apos;, {
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CefPlayer {
            get {
                return ResourceManager.GetString("CefPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //holds on to player object
        ///var player;
        ///
        /////create youtubeplayer
        ///function onYouTubePlayerAPIReady() {
        ///	player = new YT.Player(&apos;player&apos;, {
        ///		height: &apos;100px&apos;,
        ///		width: &apos;100px&apos;,	
        ///		videoId: &apos;N3y6KOYlIdc&apos;,
        ///		frameborder: &apos;1&apos;,
        ///		playerVars: { &apos;autoplay&apos;: 0 },
        ///	});
        ///}
        ///
        ///// autoplay video
        ///function onPlayerReady(event) {
        ///	
        ///}
        ///
        ///// when video ends
        ///function onPlayerStateChange(event) { 
        ///	jsobject.stateChanged(event.data);
        ///}
        ///
        ///function onPlayerError(errorCode){
        ///	jsobject.error(errorCode.data);
        ///}
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CefPlayer1 {
            get {
                return ResourceManager.GetString("CefPlayer1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;
        ///	&lt;meta charset=&apos;UTF-8&apos; /&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///	
        ///&lt;p&gt; hello world &lt;/p&gt;
        ///&lt;/body&gt;
        ///&lt;html&gt;.
        /// </summary>
        internal static string helloworld {
            get {
                return ResourceManager.GetString("helloworld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;
        ///	&lt;meta charset=&apos;UTF-8&apos; /&gt;
        ///	&lt;style type=&apos;text/css&apos;&gt;
        ///	body {
        ///		overflow:hidden;
        ///	}
        ///	#player{height:95%; width: 100%;}
        ///	&lt;/style&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///	&lt;div id=&apos;player&apos;&gt;&lt;/div&gt;
        ///		&lt;script type=&apos;text/javascript&apos; src=&apos;http://www.youtube.com/player_api&apos;&gt;&lt;/script&gt;
        ///		&lt;script type=&apos;text/javascript&apos;&gt;
        ///			//holds on to player object
        ///			var player;
        ///
        ///			//create youtubeplayer
        ///			function onYouTubePlayerAPIReady() {
        ///				player = new YT.Player(&apos;player&apos;, {
        ///					height: &apos;100px&apos;,
        ///					width: &apos;100p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Player {
            get {
                return ResourceManager.GetString("Player", resourceCulture);
            }
        }
    }
}
